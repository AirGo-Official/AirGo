name: Auto build docker
on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.9.0'

      - name: Build web
        run: |
          cd web
          sed -i 's/old-version/${{ steps.get_version.outputs.VERSION }}/g' ./src/layout/footer/index.vue
          npm install
          npm run build
          rm -rf ../server/web/web
          mv web ../server/web/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set version
        run: |
          cd ${GITHUB_WORKSPACE}/web
          sed -i 's/old-version/${{ steps.get_version.outputs.VERSION }}/g' ./src/layout/footer/index.vue
          cd ${GITHUB_WORKSPACE}/server
          sed -i 's/old-version/${{ steps.get_version.outputs.VERSION }}/g' ./main.go

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: server/scripts/Dockerfile
          platforms: linux/arm,linux/arm64,linux/amd64
          push: true
          tags: |
            ppoiuty/airgo:${{ steps.get_version.outputs.VERSION }}
            ppoiuty/airgo:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max